<?xml version="1.0" encoding="UTF-8"?>
<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core"
  xmlns:d="jelly:define"
  xmlns:f="/lib/form"
  xmlns:l="/lib/layout"
  xmlns:st="jelly:stapler"
  xmlns:t="/lib/hudson"
  xmlns:c="/lib/credentials">

  <!-- descriptor is ViolationsToGitLabDescriptor //-->
  <j:set var="config" value="${descriptor.newConfig}"/>
  <j:if test="${instance != null}">
    <!-- instance is ViolationsToGitLabRecorder //-->
    <j:set var="config" value="${instance.config}"/>
  </j:if>

  <f:entry>
    <table>
      <tr>
        <td>
          GitLab Server
        </td>
      </tr>
    </table>
  </f:entry>

  <f:entry title="Base URL, will default to global config">
    <f:textbox name="gitLabUrl" value="${config.gitLabUrl}" />
  </f:entry>

  <f:entry title="Ignore Certificate Errors">
    <f:checkbox name="ignoreCertificateErrors" checked="${config.ignoreCertificateErrors}"/>
  </f:entry>
  
  <f:entry title="Private token">
    <f:checkbox name="apiTokenPrivate" checked="${config.apiTokenPrivate}"/>
  </f:entry>

  <f:entry title="Authenticate with header">
    <f:checkbox name="authMethodHeader" checked="${config.authMethodHeader}"/>
  </f:entry>

  <f:optionalBlock checked="${config.useApiTokenCredentials}" name="useApiTokenCredentials" title="Use API token credentials" inline="true">
    <f:entry title="API token Crendential" field="apiTokenCredentialsId">
      <c:select default="${config.apiTokenCredentialsId}" />
    </f:entry>
    <f:description>
      Will default to global config.
    </f:description>
  </f:optionalBlock>

  <f:optionalBlock checked="${config.useApiToken}" name="useApiToken" title="Use API token" inline="true">
    <f:entry title="Api token">
      <f:password name="apiToken" value="${config.apiToken}" />
    </f:entry>
    <f:description>
      Will default to global config.
    </f:description>
  </f:optionalBlock>

  <f:entry>
   You may want to use <a target="_blank" href="https://wiki.jenkins-ci.org/display/JENKINS/GitLab+Plugin">GitLab Plugin</a> to get these values.
  </f:entry>
  
  <f:entry title="Project id">
    <f:textbox name="projectId" value="${config.projectId}" />
  </f:entry>
  
  <f:entry title="Merge Request Id">
    <f:textbox name="mergeRequestId" value="${config.mergeRequestId}" />
  </f:entry>

  <f:entry name="minSeverity" title="Comment only if severity at least" field="minSeverity">
    <select name="minSeverity">
        <f:option value="">Default, global config or INFO if no global config</f:option>
        <f:option value="INFO" selected="${config.minSeverity == 'INFO'}">INFO</f:option>
        <f:option value="WARN" selected="${config.minSeverity == 'WARN'}">WARN</f:option>
        <f:option value="ERROR" selected="${config.minSeverity == 'ERROR'}">ERROR</f:option>
    </select>
  </f:entry>

  <f:entry title="Keep old comments">
    <f:checkbox name="keepOldComments" checked="${config.keepOldComments}"/>
  </f:entry>

  <f:entry title="Set title of MR to WIP if it contains violations">
    <f:checkbox name="shouldSetWip" checked="${config.shouldSetWip}"/>
  </f:entry>

<!-- Cannot yet support this because the API does not support it. https://gitlab.com/gitlab-org/gitlab-ce/issues/14850 -->
<!--
  <f:entry title="Create one comment per violation">
    <f:checkbox name="createSingleFileComments" checked="${config.createSingleFileComments}"/>
  </f:entry>
-->

  <f:entry title="Create one big comment with all violations">
    <f:checkbox name="createCommentWithAllSingleFileComments" checked="${config.createCommentWithAllSingleFileComments}"/>
  </f:entry>

  <f:entry title="Comment only changed part of files">
    <f:checkbox name="commentOnlyChangedContent" checked="${config.commentOnlyChangedContent}"/>
  </f:entry>

  <f:entry>
  <table class="xmlFilenamePatterns" cellspacing="5">
    <tr>
      <td align="left" colspan="2">
        <b>Violations configuration</b>
        <ul>
          <li>The <b>pattern</b> may be, for example, <i>.*/findbugs/.*\.xml$</i> to match xml-files, in a folder named findbugs, anywhere in workspace. You try <a href="https://jex.im/regulex/" target="_blank">Regulex</a> for creating your regexp.</li>
          <li>The <b>reporter</b> is optional. The parser name will be used if no reporter specified. It is intended to be the name of the tool reporting the violations. For example if Detekt is used to produce a checkstyle-report, then you may specify Detekt in the reporter field.</li>
        </ul>
      </td>
    </tr>
  </table>
  </f:entry>

  <j:forEach var="violationConfig" items="${config.violationConfigs}" indexVar="i">
    <f:entry title="${violationConfig.parser}">
    <table cellspacing="5">
    <tr>
      <th align="left">
        Pattern
      </th>
      <th align="left">
        Reporter
      </th>
    </tr>
      <tr>
        <td>
          <f:textbox name="descriptor.config.violationConfigs[${i}].pattern" value="${violationConfig.pattern}" />
        </td>
        <td>
          <f:textbox name="descriptor.config.violationConfigs[${i}].reporter" value="${violationConfig.reporter}" />
        </td>
      </tr>
    </table>
    </f:entry>
  </j:forEach>

</j:jelly>
